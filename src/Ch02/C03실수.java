package Ch02;

public class C03실수 {

	public static void main(String[] args) {
		
		
		
		// 실수값 저장에 있어서 소수점 이하의 숫자의 범위는 무한대에 가깝다.
		// 제한적인 공간에 소수점이하의 범위를 다 담아내지 못하기 때문에
		// 실수값을 저장하는 공간은 특정한 방적식을 이용해서 근사값을 구하게 된다
		// 실수값을 반복적으로 연산처리를 하게 되면 오차가 발생할 가능성이 높다
		// 반복연산을 해야되는 실수값은 정수값으로 변환해서 처리를 하는것을 권장한다
		
		
//		소수점의 위치지정 방식
//		고정 소수점 방식 = 소수점의 위치가 고정되어 값을 저장하는 방식
//                    속도난 빠르나 , 메모리를 효율적으로 사용하지 못한다.
		
//		*장)부동 소수점에 비해 속도가 상대적으로 빠르다 / 공간을 효율적으로 사용함
//	     단)8비트) ㅁㅁㅁ.ㅁㅁㅁ12.456789 ->> 길어지게되면 저장을 못하게됨  
		
		
		
//		부동 소수점 방석 : 소수점의 위치가 저장 요청하는 값에 따라 바뀌는 방식
//                    속도는 느리나  메모리를 효율적으로 사용한다.
		// 가동성 /읽기 쉬워야하고 지적을 잘해야함/ 메서드 체계적으로 , 메모리공간이 효율적으로해야함// 최소화 
	}
	
	

}
